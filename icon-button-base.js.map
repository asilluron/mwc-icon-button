{"version":3,"file":"icon-button-base.js","sourceRoot":"","sources":["src/icon-button-base.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;;;;;;;AAEF,OAAO,EAAC,WAAW,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,iBAAiB,EAAC,MAAM,oCAAoC,CAAC;AACnH,OAAO,6BAA6B,MAAM,qCAAqC,CAAC;AAEhF,OAAO,EAAC,MAAM,EAAC,MAAM,0CAA0C,CAAC;AAEhE,MAAM,OAAgB,cAAe,SAAQ,WAAW;IAAxD;;QAEY,uBAAkB,GAAG,6BAA6B,CAAC;QAQ7D,UAAK,GAAG,EAAE,CAAC;QAGX,aAAQ,GAAG,KAAK,CAAC;QAGjB,SAAI,GAAG,EAAE,CAAC;QAGV,YAAO,GAAG,EAAE,CAAC;QAMb,OAAE,GAAG,KAAK,CAAC;IA+Cb,CAAC;IA7CW,aAAa;QACrB,yBACK,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,IAClC,OAAO,EAAE,CAAC,IAAY,EAAE,KAAa,EAAE,EAAE;gBACvC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YACzC,CAAC,EACD,YAAY,EAAE,CAAC,OAAwB,EAAE,EAAE;gBACzC,IAAI,IAAI,CAAC,OAAO,KAAK,EAAE,EAAE;oBACvB,OAAO;iBACR;gBACD,IAAI,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,4BAA4B,EAAE,EAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;YACtG,CAAC,IACF;IACH,CAAC;IAES,WAAW;QACnB,IAAI,IAAI,CAAC,OAAO,KAAK,EAAE,EAAE;YACvB,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;YACnB,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;SAClC;IACH,CAAC;IAED,KAAK;QACH,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;IAED,OAAO;QACL,IAAI,IAAI,CAAC,OAAO,KAAK,EAAE,EAAE;YACvB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC;SAChB;IACH,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;;mBAEI,MAAM,EAAE;;kBAET,IAAI,CAAC,WAAW;;sBAEZ,IAAI,CAAC,KAAK;qBACX,IAAI,CAAC,QAAQ;0DACwB,IAAI,CAAC,OAAO;oFACc,IAAI,CAAC,IAAI;gBAC7E,CAAC;IACf,CAAC;CACF;AAjEC;IADC,KAAK,CAAC,kBAAkB,CAAC;+CACM;AAGhC;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;6CACd;AAGX;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;gDACxB;AAGjB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;4CACf;AAGV;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;+CACZ;AAMb;IAJC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;IACxC,QAAQ,CAAC,UAA+B,KAAc;QACrD,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC,CAAC;0CACS","sourcesContent":["/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport {BaseElement, html, property, query, observer, addHasRemoveClass} from '@material/mwc-base/base-element.js';\nimport MDCIconButtonToggleFoundation from '@material/icon-button/foundation.js';\nimport {MDCIconButtonToggleAdapter} from '@material/icon-button/adapter.js';\nimport {ripple} from '@material/mwc-ripple/ripple-directive.js';\n\nexport abstract class IconButtonBase extends BaseElement {\n\n  protected mdcFoundationClass = MDCIconButtonToggleFoundation;\n\n  protected mdcFoundation!: MDCIconButtonToggleFoundation;\n\n  @query('.mdc-icon-button')\n  protected mdcRoot!: HTMLElement;\n\n  @property({type: String})\n  label = '';\n\n  @property({type: Boolean, reflect: true})\n  disabled = false;\n\n  @property({type: String})\n  icon = '';\n\n  @property({type: String})\n  offIcon = '';\n\n  @property({type: Boolean, reflect: true})\n  @observer(function(this: IconButtonBase, state: boolean) {\n    this.mdcFoundation.toggle(state);\n  })\n  on = false;\n\n  protected createAdapter(): MDCIconButtonToggleAdapter {\n    return {\n      ...addHasRemoveClass(this.mdcRoot),\n      setAttr: (name: string, value: string) => {\n        this.mdcRoot.setAttribute(name, value);\n      },\n      notifyChange: (evtData: {isOn: boolean}) => {\n        if (this.offIcon === '') {\n          return;\n        }\n        this.dispatchEvent(new CustomEvent('MDCIconButtonToggle:change', {detail: evtData, bubbles: true}));\n      }\n    }\n  }\n\n  protected handleClick() {\n    if (this.offIcon !== '') {\n      this.on = !this.on;\n      this.mdcFoundation.handleClick();\n    }\n  }\n\n  focus() {\n    this.mdcRoot.focus();\n  }\n\n  updated() {\n    if (this.offIcon === '') {\n      this.on = true;\n    }\n  }\n\n  render() {\n    return html`\n      <button\n        .ripple=\"${ripple()}\"\n        class=\"mdc-icon-button\"\n        @click=\"${this.handleClick}\"\n        aria-hidden=\"true\"\n        aria-label=\"${this.label}\"\n        ?disabled=\"${this.disabled}\">\n        <i class=\"material-icons mdc-icon-button__icon\">${this.offIcon}</i>\n        <i class=\"material-icons mdc-icon-button__icon mdc-icon-button__icon--on\">${this.icon}</i>\n      </button>`;\n  }\n}"]}